{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/src/app/projects/chess/types/index.ts"],"sourcesContent":["export type Square = {\n  row: number;\n  col: number;\n  piece?: Piece;\n};\n\nexport type Piece = {\n  id: string;\n  player: Player;\n  type: PieceType;\n  color: PlayerColor;\n  currentSquare: Square;\n  movementStrategy: MovementStrategy;\n  isAlive: boolean;\n  hasMoved?: boolean;\n};\n\nexport interface MovementStrategy {\n  (board: Square[][], piece: Piece, moveHistory?: Move[]): Move[];\n}\n\nexport enum PieceType {\n  PAWN = \"pawn\",\n  ROOK = \"rook\",\n  KNIGHT = \"knight\",\n  BISHOP = \"bishop\",\n  QUEEN = \"queen\",\n  KING = \"king\",\n}\n\nexport type Player = {\n  color: PlayerColor;\n  type: PlayerType;\n};\n\nexport enum PlayerColor {\n  WHITE = \"white\",\n  BLACK = \"black\",\n}\n\nexport enum PlayerType {\n  HUMAN = \"Human\",\n  COMPUTER = \"Computer\",\n}\n\nexport type GameState = {\n  board: Square[][];\n  players: Player[];\n  piecesByPlayer: Map<Player, Piece[]>;\n  currentPlayerIndex: number;\n  currentPlayerMoves: Move[];\n  capturedPieces: Piece[];\n  kingSquare: Square | undefined;\n  isKingInCheck: boolean;\n  moveHistory: Move[];\n  undoneMoves: Move[];\n  halfMoveClock: number;\n  fullMoveNumber: number;\n};\n\nexport enum MoveType {\n  STNDRD = \"Standard\",\n  CASTLE = \"Castling\",\n  EP = \"EnPassant\",\n  PROMO = \"Promotion\",\n}\n\nexport interface Move {\n  type: MoveType;\n  from: Square;\n  to: Square;\n  piece: Piece;\n  capturedPiece?: Piece;\n  isPromotion?: boolean;\n  isCapture?: boolean;\n}\n\nexport interface CastlingMove extends Move {\n  rook: Piece;\n  kingFrom: Square;\n  kingTo: Square;\n  rookFrom: Square;\n  rookTo: Square;\n}\n\nexport interface EnPassantMove extends Move {\n  capturedPieceSquare: Square;\n}\n\nexport interface PromotionMove extends Move {\n  promotionType: PieceType;\n}\n"],"names":[],"mappings":";;;;;;AAqBO,IAAA,AAAK,mCAAA;;;;;;;WAAA;;AAcL,IAAA,AAAK,qCAAA;;;WAAA;;AAKL,IAAA,AAAK,oCAAA;;;WAAA;;AAoBL,IAAA,AAAK,kCAAA;;;;;WAAA"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/src/app/projects/chess/utils/square.ts"],"sourcesContent":["import { Piece, Square } from \"../types\";\n\nexport const createSquare = (\n  row: number,\n  col: number,\n  piece?: Piece\n): Square => ({\n  row,\n  col,\n  piece,\n});\n"],"names":[],"mappings":";;;AAEO,MAAM,eAAe,CAC1B,KACA,KACA,QACW,CAAC;QACZ;QACA;QACA;IACF,CAAC"}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/src/app/projects/chess/utils/move.ts"],"sourcesContent":["import {\n  Move,\n  EnPassantMove,\n  CastlingMove,\n  PromotionMove,\n  MoveType,\n  Piece,\n  PieceType,\n  Square,\n} from \"../types\";\n\nexport const createStandardMove = (\n  piece: Piece,\n  from: Square,\n  to: Square,\n  capturedPiece?: Piece,\n  isCapture?: boolean\n): Move => ({\n  type: MoveType.STNDRD,\n  from,\n  to,\n  capturedPiece,\n  piece,\n  isCapture,\n});\n\nexport const createCastlingMove = (\n  king: Piece,\n  rook: Piece,\n  kingFrom: Square,\n  kingTo: Square,\n  rookFrom: Square,\n  rookTo: Square\n): CastlingMove => ({\n  type: MoveType.CASTLE,\n  from: kingFrom,\n  to: kingTo,\n  capturedPiece: undefined,\n  piece: king,\n  rook: rook,\n  isCapture: false,\n  kingFrom,\n  kingTo,\n  rookFrom,\n  rookTo,\n});\n\nexport const createEnPassantMove = (\n  piece: Piece,\n  from: Square,\n  to: Square,\n  capturedPieceSquare: Square,\n  capturedPiece: Piece\n): EnPassantMove => ({\n  type: MoveType.EP,\n  piece: piece,\n  from: from,\n  to: to,\n  capturedPieceSquare: capturedPieceSquare,\n  capturedPiece: capturedPiece,\n});\n\nexport const createPromotionMove = (\n  piece: Piece,\n  from: Square,\n  to: Square,\n  promotionType: PieceType,\n  capturedPiece?: Piece\n): PromotionMove => ({\n  type: MoveType.PROMO,\n  piece: piece,\n  from: from,\n  to: to,\n  promotionType: promotionType,\n  capturedPiece: capturedPiece,\n});\n"],"names":[],"mappings":";;;;;;AAAA;;AAWO,MAAM,qBAAqB,CAChC,OACA,MACA,IACA,eACA,YACS,CAAC;QACV,MAAM,iJAAA,CAAA,WAAQ,CAAC,MAAM;QACrB;QACA;QACA;QACA;QACA;IACF,CAAC;AAEM,MAAM,qBAAqB,CAChC,MACA,MACA,UACA,QACA,UACA,SACiB,CAAC;QAClB,MAAM,iJAAA,CAAA,WAAQ,CAAC,MAAM;QACrB,MAAM;QACN,IAAI;QACJ,eAAe;QACf,OAAO;QACP,MAAM;QACN,WAAW;QACX;QACA;QACA;QACA;IACF,CAAC;AAEM,MAAM,sBAAsB,CACjC,OACA,MACA,IACA,qBACA,gBACkB,CAAC;QACnB,MAAM,iJAAA,CAAA,WAAQ,CAAC,EAAE;QACjB,OAAO;QACP,MAAM;QACN,IAAI;QACJ,qBAAqB;QACrB,eAAe;IACjB,CAAC;AAEM,MAAM,sBAAsB,CACjC,OACA,MACA,IACA,eACA,gBACkB,CAAC;QACnB,MAAM,iJAAA,CAAA,WAAQ,CAAC,KAAK;QACpB,OAAO;QACP,MAAM;QACN,IAAI;QACJ,eAAe;QACf,eAAe;IACjB,CAAC"}},
    {"offset": {"line": 112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/src/app/projects/chess/utils/strategies/bishopMovementStrategy.ts"],"sourcesContent":["import { Move, MovementStrategy } from \"../../types\";\nimport { createSquare, createStandardMove, getPieceAt } from \"../index\";\n\nexport const bishopMovementStrategy: MovementStrategy = (board, piece) => {\n  let legalMoves: Move[] = [];\n  let row = piece.currentSquare.row;\n  let col = piece.currentSquare.col;\n\n  const directions = [\n    [1, 1],\n    [1, -1],\n    [-1, -1],\n    [-1, 1],\n  ];\n\n  directions.forEach(([dRow, dCol]) => {\n    let newRow = row + dRow;\n    let newCol = col + dCol;\n\n    while (newRow >= 0 && newRow <= 7 && newCol >= 0 && newCol <= 7) {\n      const targetSquare = createSquare(newRow, newCol, piece);\n      const targetPiece = getPieceAt(board, newRow, newCol);\n      const capturedPiece =\n        targetPiece && targetPiece.color !== piece.color\n          ? targetPiece\n          : undefined;\n      if (targetPiece && targetPiece.color === piece.color) {\n        break;\n      }\n      legalMoves.push(\n        createStandardMove(\n          piece,\n          piece.currentSquare,\n          targetSquare,\n          capturedPiece\n        )\n      );\n      if (capturedPiece) {\n        break;\n      }\n\n      newRow += dRow;\n      newCol += dCol;\n    }\n  });\n  return legalMoves;\n};\n"],"names":[],"mappings":";;;AACA;AAAA;AAAA;AAAA;;AAEO,MAAM,yBAA2C,CAAC,OAAO;IAC9D,IAAI,aAAqB,EAAE;IAC3B,IAAI,MAAM,MAAM,aAAa,CAAC,GAAG;IACjC,IAAI,MAAM,MAAM,aAAa,CAAC,GAAG;IAEjC,MAAM,aAAa;QACjB;YAAC;YAAG;SAAE;QACN;YAAC;YAAG,CAAC;SAAE;QACP;YAAC,CAAC;YAAG,CAAC;SAAE;QACR;YAAC,CAAC;YAAG;SAAE;KACR;IAED,WAAW,OAAO,CAAC,CAAC,CAAC,MAAM,KAAK;QAC9B,IAAI,SAAS,MAAM;QACnB,IAAI,SAAS,MAAM;QAEnB,MAAO,UAAU,KAAK,UAAU,KAAK,UAAU,KAAK,UAAU,EAAG;YAC/D,MAAM,eAAe,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EAAE,QAAQ,QAAQ;YAClD,MAAM,cAAc,CAAA,GAAA,iJAAA,CAAA,aAAU,AAAD,EAAE,OAAO,QAAQ;YAC9C,MAAM,gBACJ,eAAe,YAAY,KAAK,KAAK,MAAM,KAAK,GAC5C,cACA;YACN,IAAI,eAAe,YAAY,KAAK,KAAK,MAAM,KAAK,EAAE;gBACpD;YACF;YACA,WAAW,IAAI,CACb,CAAA,GAAA,gJAAA,CAAA,qBAAkB,AAAD,EACf,OACA,MAAM,aAAa,EACnB,cACA;YAGJ,IAAI,eAAe;gBACjB;YACF;YAEA,UAAU;YACV,UAAU;QACZ;IACF;IACA,OAAO;AACT"}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/src/app/projects/chess/utils/strategies/kingMovementStrategy.ts"],"sourcesContent":["import { MovementStrategy, Piece, Square, Move } from \"../../types\";\nimport {\n  createSquare,\n  createStandardMove,\n  createCastlingMove,\n  getPieceAt,\n} from \"../index\";\n\nexport const kingMovementStrategy: MovementStrategy = (board, piece) => {\n  const legalMoves: Move[] = [];\n  let row = piece.currentSquare.row;\n  let col = piece.currentSquare.col;\n\n  const directions = [\n    [1, 0],\n    [0, 1],\n    [-1, 0],\n    [0, -1],\n    [1, 1],\n    [1, -1],\n    [-1, 1],\n    [-1, -1],\n  ];\n\n  const addCastlingMoves = (\n    board: Square[][],\n    king: Piece,\n    legalMoves: Move[]\n  ) => {\n    const rookPositions = {\n      kingSideRookCol: 7,\n      queenSideRookCol: 0,\n    };\n    const kingSideRook = getPieceAt(\n      board,\n      king.currentSquare.row,\n      rookPositions.kingSideRookCol\n    );\n    const queenSideRook = getPieceAt(\n      board,\n      king.currentSquare.row,\n      rookPositions.queenSideRookCol\n    );\n\n    if (kingSideRook && !kingSideRook.hasMoved && !king.hasMoved) {\n      legalMoves.push(\n        createCastlingMove(\n          king,\n          kingSideRook,\n          king.currentSquare,\n          createSquare(\n            king.currentSquare.row,\n            king.currentSquare.col + 2,\n            king\n          ),\n          kingSideRook.currentSquare,\n          createSquare(\n            kingSideRook.currentSquare.row,\n            kingSideRook.currentSquare.col - 2,\n            kingSideRook\n          )\n        )\n      );\n    }\n\n    if (queenSideRook && !queenSideRook.hasMoved && !king.hasMoved) {\n      legalMoves.push(\n        createCastlingMove(\n          king,\n          queenSideRook,\n          king.currentSquare,\n          createSquare(\n            king.currentSquare.row,\n            king.currentSquare.col - 2,\n            king\n          ),\n          queenSideRook.currentSquare,\n          createSquare(\n            queenSideRook.currentSquare.row,\n            queenSideRook.currentSquare.col + 3,\n            queenSideRook\n          )\n        )\n      );\n    }\n  };\n\n  directions.forEach(([dRow, dCol]) => {\n    let newRow = row + dRow;\n    let newCol = col + dCol;\n\n    if (newRow >= 0 && newRow < 8 && newCol >= 0 && newCol < 8) {\n      const targetSquare = createSquare(newRow, newCol, piece);\n      const targetPiece = getPieceAt(board, newRow, newCol);\n      const capturedPiece =\n        targetPiece && targetPiece.color !== piece.color\n          ? targetPiece\n          : undefined;\n      if (capturedPiece) {\n        legalMoves.push(\n          createStandardMove(\n            piece,\n            piece.currentSquare,\n            targetSquare,\n            capturedPiece\n          )\n        );\n      } else if (!targetPiece) {\n        legalMoves.push(\n          createStandardMove(piece, piece.currentSquare, targetSquare)\n        );\n      }\n    }\n  });\n  addCastlingMoves(board, piece, legalMoves);\n\n  return legalMoves;\n};\n"],"names":[],"mappings":";;;AACA;AAAA;AAAA;AAAA;;AAOO,MAAM,uBAAyC,CAAC,OAAO;IAC5D,MAAM,aAAqB,EAAE;IAC7B,IAAI,MAAM,MAAM,aAAa,CAAC,GAAG;IACjC,IAAI,MAAM,MAAM,aAAa,CAAC,GAAG;IAEjC,MAAM,aAAa;QACjB;YAAC;YAAG;SAAE;QACN;YAAC;YAAG;SAAE;QACN;YAAC,CAAC;YAAG;SAAE;QACP;YAAC;YAAG,CAAC;SAAE;QACP;YAAC;YAAG;SAAE;QACN;YAAC;YAAG,CAAC;SAAE;QACP;YAAC,CAAC;YAAG;SAAE;QACP;YAAC,CAAC;YAAG,CAAC;SAAE;KACT;IAED,MAAM,mBAAmB,CACvB,OACA,MACA;QAEA,MAAM,gBAAgB;YACpB,iBAAiB;YACjB,kBAAkB;QACpB;QACA,MAAM,eAAe,CAAA,GAAA,iJAAA,CAAA,aAAU,AAAD,EAC5B,OACA,KAAK,aAAa,CAAC,GAAG,EACtB,cAAc,eAAe;QAE/B,MAAM,gBAAgB,CAAA,GAAA,iJAAA,CAAA,aAAU,AAAD,EAC7B,OACA,KAAK,aAAa,CAAC,GAAG,EACtB,cAAc,gBAAgB;QAGhC,IAAI,gBAAgB,CAAC,aAAa,QAAQ,IAAI,CAAC,KAAK,QAAQ,EAAE;YAC5D,WAAW,IAAI,CACb,CAAA,GAAA,gJAAA,CAAA,qBAAkB,AAAD,EACf,MACA,cACA,KAAK,aAAa,EAClB,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EACT,KAAK,aAAa,CAAC,GAAG,EACtB,KAAK,aAAa,CAAC,GAAG,GAAG,GACzB,OAEF,aAAa,aAAa,EAC1B,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EACT,aAAa,aAAa,CAAC,GAAG,EAC9B,aAAa,aAAa,CAAC,GAAG,GAAG,GACjC;QAIR;QAEA,IAAI,iBAAiB,CAAC,cAAc,QAAQ,IAAI,CAAC,KAAK,QAAQ,EAAE;YAC9D,WAAW,IAAI,CACb,CAAA,GAAA,gJAAA,CAAA,qBAAkB,AAAD,EACf,MACA,eACA,KAAK,aAAa,EAClB,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EACT,KAAK,aAAa,CAAC,GAAG,EACtB,KAAK,aAAa,CAAC,GAAG,GAAG,GACzB,OAEF,cAAc,aAAa,EAC3B,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EACT,cAAc,aAAa,CAAC,GAAG,EAC/B,cAAc,aAAa,CAAC,GAAG,GAAG,GAClC;QAIR;IACF;IAEA,WAAW,OAAO,CAAC,CAAC,CAAC,MAAM,KAAK;QAC9B,IAAI,SAAS,MAAM;QACnB,IAAI,SAAS,MAAM;QAEnB,IAAI,UAAU,KAAK,SAAS,KAAK,UAAU,KAAK,SAAS,GAAG;YAC1D,MAAM,eAAe,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EAAE,QAAQ,QAAQ;YAClD,MAAM,cAAc,CAAA,GAAA,iJAAA,CAAA,aAAU,AAAD,EAAE,OAAO,QAAQ;YAC9C,MAAM,gBACJ,eAAe,YAAY,KAAK,KAAK,MAAM,KAAK,GAC5C,cACA;YACN,IAAI,eAAe;gBACjB,WAAW,IAAI,CACb,CAAA,GAAA,gJAAA,CAAA,qBAAkB,AAAD,EACf,OACA,MAAM,aAAa,EACnB,cACA;YAGN,OAAO,IAAI,CAAC,aAAa;gBACvB,WAAW,IAAI,CACb,CAAA,GAAA,gJAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO,MAAM,aAAa,EAAE;YAEnD;QACF;IACF;IACA,iBAAiB,OAAO,OAAO;IAE/B,OAAO;AACT"}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/src/app/projects/chess/utils/strategies/knightMovementStrategy.ts"],"sourcesContent":["import { MovementStrategy, Move } from \"../../types\";\nimport { createStandardMove, createSquare, getPieceAt } from \"../index\";\n\nexport const knightMovementStrategy: MovementStrategy = (board, piece) => {\n  let legalMoves: Move[] = [];\n  let row = piece.currentSquare.row;\n  let col = piece.currentSquare.col;\n\n  const knightMoves = [\n    [-2, 1],\n    [-1, 2],\n    [2, 1],\n    [1, 2],\n    [-2, -1],\n    [-1, -2],\n    [2, -1],\n    [1, -2],\n  ];\n\n  knightMoves.forEach(([dRow, dCol]) => {\n    let newRow = row + dRow;\n    let newCol = col + dCol;\n    if (newRow >= 0 && newRow < 8 && newCol >= 0 && newCol < 8) {\n      const targetSquare = createSquare(newRow, newCol, piece);\n      const targetPiece = getPieceAt(board, newRow, newCol);\n      const capturedPiece =\n        targetPiece && targetPiece.color !== piece.color\n          ? targetPiece\n          : undefined;\n      if (capturedPiece) {\n        legalMoves.push(\n          createStandardMove(\n            piece,\n            piece.currentSquare,\n            targetSquare,\n            capturedPiece\n          )\n        );\n      } else if (!targetPiece) {\n        legalMoves.push(\n          createStandardMove(piece, piece.currentSquare, targetSquare)\n        );\n      }\n    }\n  });\n\n  return legalMoves;\n};\n"],"names":[],"mappings":";;;AACA;AAAA;AAAA;AAAA;;AAEO,MAAM,yBAA2C,CAAC,OAAO;IAC9D,IAAI,aAAqB,EAAE;IAC3B,IAAI,MAAM,MAAM,aAAa,CAAC,GAAG;IACjC,IAAI,MAAM,MAAM,aAAa,CAAC,GAAG;IAEjC,MAAM,cAAc;QAClB;YAAC,CAAC;YAAG;SAAE;QACP;YAAC,CAAC;YAAG;SAAE;QACP;YAAC;YAAG;SAAE;QACN;YAAC;YAAG;SAAE;QACN;YAAC,CAAC;YAAG,CAAC;SAAE;QACR;YAAC,CAAC;YAAG,CAAC;SAAE;QACR;YAAC;YAAG,CAAC;SAAE;QACP;YAAC;YAAG,CAAC;SAAE;KACR;IAED,YAAY,OAAO,CAAC,CAAC,CAAC,MAAM,KAAK;QAC/B,IAAI,SAAS,MAAM;QACnB,IAAI,SAAS,MAAM;QACnB,IAAI,UAAU,KAAK,SAAS,KAAK,UAAU,KAAK,SAAS,GAAG;YAC1D,MAAM,eAAe,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EAAE,QAAQ,QAAQ;YAClD,MAAM,cAAc,CAAA,GAAA,iJAAA,CAAA,aAAU,AAAD,EAAE,OAAO,QAAQ;YAC9C,MAAM,gBACJ,eAAe,YAAY,KAAK,KAAK,MAAM,KAAK,GAC5C,cACA;YACN,IAAI,eAAe;gBACjB,WAAW,IAAI,CACb,CAAA,GAAA,gJAAA,CAAA,qBAAkB,AAAD,EACf,OACA,MAAM,aAAa,EACnB,cACA;YAGN,OAAO,IAAI,CAAC,aAAa;gBACvB,WAAW,IAAI,CACb,CAAA,GAAA,gJAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO,MAAM,aAAa,EAAE;YAEnD;QACF;IACF;IAEA,OAAO;AACT"}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 325, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/src/app/projects/chess/utils/strategies/pawnMovementStrategy.ts"],"sourcesContent":["import {\n  Move,\n  MovementStrategy,\n  Piece,\n  Square,\n  PlayerColor,\n  PieceType,\n} from \"../../types\";\nimport {\n  createEnPassantMove,\n  createPromotionMove,\n  createSquare,\n  createStandardMove,\n  getPieceAt,\n  isEmpty,\n} from \"../index\";\n\nexport const pawnMovementStrategy: MovementStrategy = (\n  board,\n  piece,\n  moveHistory\n) => {\n  const legalMoves: Move[] = [];\n  const { row, col } = piece.currentSquare;\n  const direction = piece.color === PlayerColor.WHITE ? -1 : 1;\n  const backRank = piece.color === PlayerColor.WHITE ? 0 : 7;\n  const startingRow = piece.color === PlayerColor.WHITE ? 6 : 1;\n\n  const addNormalMoves = (\n    row: number,\n    col: number,\n    direction: number,\n    backRank: number,\n    piece: Piece,\n    board: Square[][],\n    legalMoves: Move[]\n  ) => {\n    const newRow = row + direction;\n    if (newRow !== backRank && isEmpty(board, newRow, col)) {\n      legalMoves.push(\n        createStandardMove(\n          piece,\n          createSquare(row, col),\n          createSquare(newRow, col, piece)\n        )\n      );\n    }\n  };\n\n  const addDoubleMove = (\n    row: number,\n    col: number,\n    direction: number,\n    startingRow: number,\n    piece: Piece,\n    board: Square[][],\n    legalMoves: Move[]\n  ) => {\n    const newRow = row + 2 * direction;\n    if (\n      row === startingRow &&\n      isEmpty(board, row + direction, col) &&\n      isEmpty(board, newRow, col)\n    ) {\n      legalMoves.push(\n        createStandardMove(\n          piece,\n          createSquare(row, col),\n          createSquare(newRow, col, piece)\n        )\n      );\n    }\n  };\n\n  const addCaptureMoves = (\n    row: number,\n    col: number,\n    direction: number,\n    backRank: number,\n    piece: Piece,\n    board: Square[][],\n    legalMoves: Move[]\n  ) => {\n    [-1, 1].forEach((colOffset) => {\n      const newRow = row + direction;\n      const newCol = col + colOffset;\n      if (newRow >= 0 && newRow <= 7 && newCol >= 0 && newCol <= 7) {\n        const targetSquare = createSquare(newRow, newCol);\n        const targetPiece = getPieceAt(board, newRow, newCol);\n        const capturedPiece =\n          targetPiece && targetPiece.color !== piece.color\n            ? targetPiece\n            : undefined;\n        if (capturedPiece && newRow === backRank) {\n          return;\n        }\n        capturedPiece &&\n          legalMoves.push(\n            createStandardMove(\n              piece,\n              createSquare(row, col, piece),\n              targetSquare,\n              capturedPiece\n            )\n          );\n      }\n    });\n  };\n\n  const addEnPassantMoves = (\n    row: number,\n    col: number,\n    piece: Piece,\n    board: Square[][],\n    moveHistory: Move[] | undefined,\n    legalMoves: Move[]\n  ) => {\n    if (!moveHistory) {\n      return;\n    }\n    const enPassantStartingRow = piece.color === PlayerColor.WHITE ? 1 : 6;\n    const enPassantEndRow = piece.color === PlayerColor.WHITE ? 3 : 4;\n    const direction = piece.color === PlayerColor.WHITE ? -1 : 1;\n    const lastMove = moveHistory[moveHistory.length - 1];\n\n    if (\n      lastMove &&\n      lastMove.piece.type === PieceType.PAWN &&\n      lastMove.from.row === enPassantStartingRow &&\n      lastMove.to.row === enPassantEndRow &&\n      row === enPassantEndRow &&\n      Math.abs(col - lastMove.to.col) === 1\n    ) {\n      const currentSquare: Square = { row, col };\n      const targetSquare: Square = {\n        row: row + direction,\n        col: lastMove.to.col,\n        piece,\n      };\n      const capturedPiece = board[lastMove.to.row][lastMove.to.col].piece;\n      if (capturedPiece) {\n        const tempMove = createEnPassantMove(\n          piece,\n          currentSquare,\n          targetSquare,\n          capturedPiece.currentSquare,\n          capturedPiece\n        );\n        legalMoves.push(tempMove);\n      }\n    }\n  };\n\n  const addPromotionMoves = (\n    row: number,\n    col: number,\n    piece: Piece,\n    board: Square[][],\n    legalMoves: Move[]\n  ) => {\n    const direction = piece.color === PlayerColor.WHITE ? -1 : 1;\n    const rowBeforePromotionRow = piece.color === PlayerColor.WHITE ? 1 : 6;\n    const forwardSquare: Square = { row: row + direction, col };\n\n    if (row === rowBeforePromotionRow) {\n      if (!board[forwardSquare.row][forwardSquare.col].piece) {\n        Object.values(PieceType).forEach((promotionType) => {\n          if (\n            promotionType !== PieceType.PAWN &&\n            promotionType !== PieceType.KING\n          ) {\n            const promotionMove = createPromotionMove(\n              piece,\n              { row, col, piece },\n              forwardSquare,\n              promotionType\n            );\n            legalMoves.push(promotionMove);\n          }\n        });\n      }\n\n      [-1, 1].forEach((colOffset) => {\n        const newCol = col + colOffset;\n        let capturedPiece: Piece | undefined;\n        if (newCol >= 0 && newCol < 8) {\n          capturedPiece = board[forwardSquare.row][newCol].piece;\n        }\n        if (capturedPiece && capturedPiece.color !== piece.color) {\n          Object.values(PieceType).forEach((promotionType) => {\n            if (\n              promotionType !== PieceType.PAWN &&\n              promotionType !== PieceType.KING\n            ) {\n              const promotionMove = createPromotionMove(\n                piece,\n                { row, col },\n                { row: forwardSquare.row, col: newCol, piece },\n                promotionType,\n                capturedPiece\n              );\n              legalMoves.push(promotionMove);\n            }\n          });\n        }\n      });\n    }\n  };\n\n  addNormalMoves(row, col, direction, backRank, piece, board, legalMoves);\n  addDoubleMove(row, col, direction, startingRow, piece, board, legalMoves);\n  addCaptureMoves(row, col, direction, backRank, piece, board, legalMoves);\n  addEnPassantMoves(row, col, piece, board, moveHistory, legalMoves);\n  addPromotionMoves(row, col, piece, board, legalMoves);\n\n  return legalMoves;\n};\n"],"names":[],"mappings":";;;AAAA;AAQA;AAAA;AAAA;AAAA;;;AASO,MAAM,uBAAyC,CACpD,OACA,OACA;IAEA,MAAM,aAAqB,EAAE;IAC7B,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,MAAM,aAAa;IACxC,MAAM,YAAY,MAAM,KAAK,KAAK,iJAAA,CAAA,cAAW,CAAC,KAAK,GAAG,CAAC,IAAI;IAC3D,MAAM,WAAW,MAAM,KAAK,KAAK,iJAAA,CAAA,cAAW,CAAC,KAAK,GAAG,IAAI;IACzD,MAAM,cAAc,MAAM,KAAK,KAAK,iJAAA,CAAA,cAAW,CAAC,KAAK,GAAG,IAAI;IAE5D,MAAM,iBAAiB,CACrB,KACA,KACA,WACA,UACA,OACA,OACA;QAEA,MAAM,SAAS,MAAM;QACrB,IAAI,WAAW,YAAY,CAAA,GAAA,iJAAA,CAAA,UAAO,AAAD,EAAE,OAAO,QAAQ,MAAM;YACtD,WAAW,IAAI,CACb,CAAA,GAAA,gJAAA,CAAA,qBAAkB,AAAD,EACf,OACA,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EAAE,KAAK,MAClB,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EAAE,QAAQ,KAAK;QAGhC;IACF;IAEA,MAAM,gBAAgB,CACpB,KACA,KACA,WACA,aACA,OACA,OACA;QAEA,MAAM,SAAS,MAAM,IAAI;QACzB,IACE,QAAQ,eACR,CAAA,GAAA,iJAAA,CAAA,UAAO,AAAD,EAAE,OAAO,MAAM,WAAW,QAChC,CAAA,GAAA,iJAAA,CAAA,UAAO,AAAD,EAAE,OAAO,QAAQ,MACvB;YACA,WAAW,IAAI,CACb,CAAA,GAAA,gJAAA,CAAA,qBAAkB,AAAD,EACf,OACA,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EAAE,KAAK,MAClB,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EAAE,QAAQ,KAAK;QAGhC;IACF;IAEA,MAAM,kBAAkB,CACtB,KACA,KACA,WACA,UACA,OACA,OACA;QAEA;YAAC,CAAC;YAAG;SAAE,CAAC,OAAO,CAAC,CAAC;YACf,MAAM,SAAS,MAAM;YACrB,MAAM,SAAS,MAAM;YACrB,IAAI,UAAU,KAAK,UAAU,KAAK,UAAU,KAAK,UAAU,GAAG;gBAC5D,MAAM,eAAe,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;gBAC1C,MAAM,cAAc,CAAA,GAAA,iJAAA,CAAA,aAAU,AAAD,EAAE,OAAO,QAAQ;gBAC9C,MAAM,gBACJ,eAAe,YAAY,KAAK,KAAK,MAAM,KAAK,GAC5C,cACA;gBACN,IAAI,iBAAiB,WAAW,UAAU;oBACxC;gBACF;gBACA,iBACE,WAAW,IAAI,CACb,CAAA,GAAA,gJAAA,CAAA,qBAAkB,AAAD,EACf,OACA,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EAAE,KAAK,KAAK,QACvB,cACA;YAGR;QACF;IACF;IAEA,MAAM,oBAAoB,CACxB,KACA,KACA,OACA,OACA,aACA;QAEA,IAAI,CAAC,aAAa;YAChB;QACF;QACA,MAAM,uBAAuB,MAAM,KAAK,KAAK,iJAAA,CAAA,cAAW,CAAC,KAAK,GAAG,IAAI;QACrE,MAAM,kBAAkB,MAAM,KAAK,KAAK,iJAAA,CAAA,cAAW,CAAC,KAAK,GAAG,IAAI;QAChE,MAAM,YAAY,MAAM,KAAK,KAAK,iJAAA,CAAA,cAAW,CAAC,KAAK,GAAG,CAAC,IAAI;QAC3D,MAAM,WAAW,WAAW,CAAC,YAAY,MAAM,GAAG,EAAE;QAEpD,IACE,YACA,SAAS,KAAK,CAAC,IAAI,KAAK,iJAAA,CAAA,YAAS,CAAC,IAAI,IACtC,SAAS,IAAI,CAAC,GAAG,KAAK,wBACtB,SAAS,EAAE,CAAC,GAAG,KAAK,mBACpB,QAAQ,mBACR,KAAK,GAAG,CAAC,MAAM,SAAS,EAAE,CAAC,GAAG,MAAM,GACpC;YACA,MAAM,gBAAwB;gBAAE;gBAAK;YAAI;YACzC,MAAM,eAAuB;gBAC3B,KAAK,MAAM;gBACX,KAAK,SAAS,EAAE,CAAC,GAAG;gBACpB;YACF;YACA,MAAM,gBAAgB,KAAK,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC,GAAG,CAAC,CAAC,KAAK;YACnE,IAAI,eAAe;gBACjB,MAAM,WAAW,CAAA,GAAA,gJAAA,CAAA,sBAAmB,AAAD,EACjC,OACA,eACA,cACA,cAAc,aAAa,EAC3B;gBAEF,WAAW,IAAI,CAAC;YAClB;QACF;IACF;IAEA,MAAM,oBAAoB,CACxB,KACA,KACA,OACA,OACA;QAEA,MAAM,YAAY,MAAM,KAAK,KAAK,iJAAA,CAAA,cAAW,CAAC,KAAK,GAAG,CAAC,IAAI;QAC3D,MAAM,wBAAwB,MAAM,KAAK,KAAK,iJAAA,CAAA,cAAW,CAAC,KAAK,GAAG,IAAI;QACtE,MAAM,gBAAwB;YAAE,KAAK,MAAM;YAAW;QAAI;QAE1D,IAAI,QAAQ,uBAAuB;YACjC,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,CAAC,CAAC,cAAc,GAAG,CAAC,CAAC,KAAK,EAAE;gBACtD,OAAO,MAAM,CAAC,iJAAA,CAAA,YAAS,EAAE,OAAO,CAAC,CAAC;oBAChC,IACE,kBAAkB,iJAAA,CAAA,YAAS,CAAC,IAAI,IAChC,kBAAkB,iJAAA,CAAA,YAAS,CAAC,IAAI,EAChC;wBACA,MAAM,gBAAgB,CAAA,GAAA,gJAAA,CAAA,sBAAmB,AAAD,EACtC,OACA;4BAAE;4BAAK;4BAAK;wBAAM,GAClB,eACA;wBAEF,WAAW,IAAI,CAAC;oBAClB;gBACF;YACF;YAEA;gBAAC,CAAC;gBAAG;aAAE,CAAC,OAAO,CAAC,CAAC;gBACf,MAAM,SAAS,MAAM;gBACrB,IAAI;gBACJ,IAAI,UAAU,KAAK,SAAS,GAAG;oBAC7B,gBAAgB,KAAK,CAAC,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK;gBACxD;gBACA,IAAI,iBAAiB,cAAc,KAAK,KAAK,MAAM,KAAK,EAAE;oBACxD,OAAO,MAAM,CAAC,iJAAA,CAAA,YAAS,EAAE,OAAO,CAAC,CAAC;wBAChC,IACE,kBAAkB,iJAAA,CAAA,YAAS,CAAC,IAAI,IAChC,kBAAkB,iJAAA,CAAA,YAAS,CAAC,IAAI,EAChC;4BACA,MAAM,gBAAgB,CAAA,GAAA,gJAAA,CAAA,sBAAmB,AAAD,EACtC,OACA;gCAAE;gCAAK;4BAAI,GACX;gCAAE,KAAK,cAAc,GAAG;gCAAE,KAAK;gCAAQ;4BAAM,GAC7C,eACA;4BAEF,WAAW,IAAI,CAAC;wBAClB;oBACF;gBACF;YACF;QACF;IACF;IAEA,eAAe,KAAK,KAAK,WAAW,UAAU,OAAO,OAAO;IAC5D,cAAc,KAAK,KAAK,WAAW,aAAa,OAAO,OAAO;IAC9D,gBAAgB,KAAK,KAAK,WAAW,UAAU,OAAO,OAAO;IAC7D,kBAAkB,KAAK,KAAK,OAAO,OAAO,aAAa;IACvD,kBAAkB,KAAK,KAAK,OAAO,OAAO;IAE1C,OAAO;AACT"}},
    {"offset": {"line": 450, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 456, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/src/app/projects/chess/utils/strategies/queenMovementStrategy.ts"],"sourcesContent":["import { MovementStrategy, Move } from \"../../types\";\nimport { createStandardMove, createSquare, getPieceAt } from \"../index\";\n\nexport const queenMovementStrategy: MovementStrategy = (board, piece) => {\n  let legalMoves: Move[] = [];\n  let row = piece.currentSquare.row;\n  let col = piece.currentSquare.col;\n\n  const directions = [\n    [1, 0],\n    [0, 1],\n    [-1, 0],\n    [0, -1],\n    [1, 1],\n    [1, -1],\n    [-1, 1],\n    [-1, -1],\n  ];\n\n  directions.forEach(([dRow, dCol]) => {\n    let newRow = row + dRow;\n    let newCol = col + dCol;\n\n    while (newRow >= 0 && newRow < 8 && newCol >= 0 && newCol < 8) {\n      const targetSquare = createSquare(newRow, newCol, piece);\n      const targetPiece = getPieceAt(board, newRow, newCol);\n      const capturedPiece =\n        targetPiece && targetPiece.color !== piece.color\n          ? targetPiece\n          : undefined;\n      if (targetPiece && targetPiece.color === piece.color) {\n        break;\n      }\n      legalMoves.push(\n        createStandardMove(\n          piece,\n          piece.currentSquare,\n          targetSquare,\n          capturedPiece\n        )\n      );\n      if (capturedPiece) {\n        break;\n      }\n\n      newRow += dRow;\n      newCol += dCol;\n    }\n  });\n\n  return legalMoves;\n};\n"],"names":[],"mappings":";;;AACA;AAAA;AAAA;AAAA;;AAEO,MAAM,wBAA0C,CAAC,OAAO;IAC7D,IAAI,aAAqB,EAAE;IAC3B,IAAI,MAAM,MAAM,aAAa,CAAC,GAAG;IACjC,IAAI,MAAM,MAAM,aAAa,CAAC,GAAG;IAEjC,MAAM,aAAa;QACjB;YAAC;YAAG;SAAE;QACN;YAAC;YAAG;SAAE;QACN;YAAC,CAAC;YAAG;SAAE;QACP;YAAC;YAAG,CAAC;SAAE;QACP;YAAC;YAAG;SAAE;QACN;YAAC;YAAG,CAAC;SAAE;QACP;YAAC,CAAC;YAAG;SAAE;QACP;YAAC,CAAC;YAAG,CAAC;SAAE;KACT;IAED,WAAW,OAAO,CAAC,CAAC,CAAC,MAAM,KAAK;QAC9B,IAAI,SAAS,MAAM;QACnB,IAAI,SAAS,MAAM;QAEnB,MAAO,UAAU,KAAK,SAAS,KAAK,UAAU,KAAK,SAAS,EAAG;YAC7D,MAAM,eAAe,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EAAE,QAAQ,QAAQ;YAClD,MAAM,cAAc,CAAA,GAAA,iJAAA,CAAA,aAAU,AAAD,EAAE,OAAO,QAAQ;YAC9C,MAAM,gBACJ,eAAe,YAAY,KAAK,KAAK,MAAM,KAAK,GAC5C,cACA;YACN,IAAI,eAAe,YAAY,KAAK,KAAK,MAAM,KAAK,EAAE;gBACpD;YACF;YACA,WAAW,IAAI,CACb,CAAA,GAAA,gJAAA,CAAA,qBAAkB,AAAD,EACf,OACA,MAAM,aAAa,EACnB,cACA;YAGJ,IAAI,eAAe;gBACjB;YACF;YAEA,UAAU;YACV,UAAU;QACZ;IACF;IAEA,OAAO;AACT"}},
    {"offset": {"line": 522, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 528, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/src/app/projects/chess/utils/strategies/rookMovementStrategy.ts"],"sourcesContent":["import { MovementStrategy, Move } from \"../../types\";\nimport { createStandardMove, getPieceAt, createSquare } from \"../index\";\n\nexport const rookMovementStrategy: MovementStrategy = (board, piece) => {\n  let legalMoves: Move[] = [];\n  let row = piece.currentSquare.row;\n  let col = piece.currentSquare.col;\n\n  const directions = [\n    [1, 0],\n    [0, 1],\n    [-1, 0],\n    [0, -1],\n  ];\n\n  directions.forEach(([dRow, dCol]) => {\n    let newRow = row + dRow;\n    let newCol = col + dCol;\n\n    while (newRow >= 0 && newRow < 8 && newCol >= 0 && newCol < 8) {\n      const targetSquare = createSquare(newRow, newCol, piece);\n      const targetPiece = getPieceAt(board, newRow, newCol);\n      const capturedPiece =\n        targetPiece && targetPiece.color !== piece.color\n          ? targetPiece\n          : undefined;\n      if (targetPiece && targetPiece.color === piece.color) {\n        break;\n      }\n      legalMoves.push(\n        createStandardMove(\n          piece,\n          piece.currentSquare,\n          targetSquare,\n          capturedPiece\n        )\n      );\n      if (capturedPiece) {\n        break;\n      }\n\n      newRow += dRow;\n      newCol += dCol;\n    }\n  });\n\n  return legalMoves;\n};\n"],"names":[],"mappings":";;;AACA;AAAA;AAAA;AAAA;;AAEO,MAAM,uBAAyC,CAAC,OAAO;IAC5D,IAAI,aAAqB,EAAE;IAC3B,IAAI,MAAM,MAAM,aAAa,CAAC,GAAG;IACjC,IAAI,MAAM,MAAM,aAAa,CAAC,GAAG;IAEjC,MAAM,aAAa;QACjB;YAAC;YAAG;SAAE;QACN;YAAC;YAAG;SAAE;QACN;YAAC,CAAC;YAAG;SAAE;QACP;YAAC;YAAG,CAAC;SAAE;KACR;IAED,WAAW,OAAO,CAAC,CAAC,CAAC,MAAM,KAAK;QAC9B,IAAI,SAAS,MAAM;QACnB,IAAI,SAAS,MAAM;QAEnB,MAAO,UAAU,KAAK,SAAS,KAAK,UAAU,KAAK,SAAS,EAAG;YAC7D,MAAM,eAAe,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EAAE,QAAQ,QAAQ;YAClD,MAAM,cAAc,CAAA,GAAA,iJAAA,CAAA,aAAU,AAAD,EAAE,OAAO,QAAQ;YAC9C,MAAM,gBACJ,eAAe,YAAY,KAAK,KAAK,MAAM,KAAK,GAC5C,cACA;YACN,IAAI,eAAe,YAAY,KAAK,KAAK,MAAM,KAAK,EAAE;gBACpD;YACF;YACA,WAAW,IAAI,CACb,CAAA,GAAA,gJAAA,CAAA,qBAAkB,AAAD,EACf,OACA,MAAM,aAAa,EACnB,cACA;YAGJ,IAAI,eAAe;gBACjB;YACF;YAEA,UAAU;YACV,UAAU;QACZ;IACF;IAEA,OAAO;AACT"}},
    {"offset": {"line": 578, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 584, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 591, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 611, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/src/app/projects/chess/utils/board.ts"],"sourcesContent":["import { Piece, Square, PieceType, MovementStrategy } from \"../types\";\nimport { createSquare } from \"./square\";\nimport {\n  rookMovementStrategy,\n  knightMovementStrategy,\n  bishopMovementStrategy,\n  queenMovementStrategy,\n  kingMovementStrategy,\n  pawnMovementStrategy,\n} from \"./strategies\";\n\ntype PieceSetup = {\n  type: PieceType;\n  positions: { row: number; col: number }[];\n  movementStrategy: MovementStrategy;\n};\n\nexport const defaultBoard = (): Square[][] => {\n  return Array.from({ length: 8 }, (_, row) =>\n    Array.from({ length: 8 }, (_, col) => createSquare(row, col, undefined))\n  );\n};\n\nexport const setupPieces: PieceSetup[] = [\n  {\n    type: PieceType.ROOK,\n    positions: [\n      { row: 0, col: 0 },\n      { row: 0, col: 7 },\n    ],\n    movementStrategy: rookMovementStrategy,\n  },\n  {\n    type: PieceType.KNIGHT,\n    positions: [\n      { row: 0, col: 1 },\n      { row: 0, col: 6 },\n    ],\n    movementStrategy: knightMovementStrategy,\n  },\n  {\n    type: PieceType.BISHOP,\n    positions: [\n      { row: 0, col: 2 },\n      { row: 0, col: 5 },\n    ],\n    movementStrategy: bishopMovementStrategy,\n  },\n  {\n    type: PieceType.QUEEN,\n    positions: [{ row: 0, col: 3 }],\n    movementStrategy: queenMovementStrategy,\n  },\n  {\n    type: PieceType.KING,\n    positions: [{ row: 0, col: 4 }],\n    movementStrategy: kingMovementStrategy,\n  },\n  {\n    type: PieceType.PAWN,\n    positions: Array.from({ length: 8 }, (_, col) => ({ row: 1, col })),\n    movementStrategy: pawnMovementStrategy,\n  },\n];\n\nexport const getPieceAt = (\n  board: Square[][],\n  row: number,\n  col: number\n): Piece | undefined => {\n  return board[row][col].piece;\n};\n\nexport const isEmpty = (\n  board: Square[][],\n  row: number,\n  col: number\n): boolean => {\n  return !board[row][col].piece;\n};\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AAeO,MAAM,eAAe;IAC1B,OAAO,MAAM,IAAI,CAAC;QAAE,QAAQ;IAAE,GAAG,CAAC,GAAG,MACnC,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAE,GAAG,CAAC,GAAG,MAAQ,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EAAE,KAAK,KAAK;AAEjE;AAEO,MAAM,cAA4B;IACvC;QACE,MAAM,iJAAA,CAAA,YAAS,CAAC,IAAI;QACpB,WAAW;YACT;gBAAE,KAAK;gBAAG,KAAK;YAAE;YACjB;gBAAE,KAAK;gBAAG,KAAK;YAAE;SAClB;QACD,kBAAkB,8KAAA,CAAA,uBAAoB;IACxC;IACA;QACE,MAAM,iJAAA,CAAA,YAAS,CAAC,MAAM;QACtB,WAAW;YACT;gBAAE,KAAK;gBAAG,KAAK;YAAE;YACjB;gBAAE,KAAK;gBAAG,KAAK;YAAE;SAClB;QACD,kBAAkB,gLAAA,CAAA,yBAAsB;IAC1C;IACA;QACE,MAAM,iJAAA,CAAA,YAAS,CAAC,MAAM;QACtB,WAAW;YACT;gBAAE,KAAK;gBAAG,KAAK;YAAE;YACjB;gBAAE,KAAK;gBAAG,KAAK;YAAE;SAClB;QACD,kBAAkB,gLAAA,CAAA,yBAAsB;IAC1C;IACA;QACE,MAAM,iJAAA,CAAA,YAAS,CAAC,KAAK;QACrB,WAAW;YAAC;gBAAE,KAAK;gBAAG,KAAK;YAAE;SAAE;QAC/B,kBAAkB,+KAAA,CAAA,wBAAqB;IACzC;IACA;QACE,MAAM,iJAAA,CAAA,YAAS,CAAC,IAAI;QACpB,WAAW;YAAC;gBAAE,KAAK;gBAAG,KAAK;YAAE;SAAE;QAC/B,kBAAkB,8KAAA,CAAA,uBAAoB;IACxC;IACA;QACE,MAAM,iJAAA,CAAA,YAAS,CAAC,IAAI;QACpB,WAAW,MAAM,IAAI,CAAC;YAAE,QAAQ;QAAE,GAAG,CAAC,GAAG,MAAQ,CAAC;gBAAE,KAAK;gBAAG;YAAI,CAAC;QACjE,kBAAkB,8KAAA,CAAA,uBAAoB;IACxC;CACD;AAEM,MAAM,aAAa,CACxB,OACA,KACA;IAEA,OAAO,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK;AAC9B;AAEO,MAAM,UAAU,CACrB,OACA,KACA;IAEA,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK;AAC/B"}},
    {"offset": {"line": 716, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 722, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/src/app/projects/chess/utils/player.ts"],"sourcesContent":["import { Player, PlayerColor, PlayerType } from \"../types\";\n\nexport const createPlayer = (color: PlayerColor, type: PlayerType): Player => ({\n  color,\n  type,\n});\n"],"names":[],"mappings":";;;AAEO,MAAM,eAAe,CAAC,OAAoB,OAA6B,CAAC;QAC7E;QACA;IACF,CAAC"}},
    {"offset": {"line": 729, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 735, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 740, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 758, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/src/app/projects/chess/hooks/useChessGame.ts"],"sourcesContent":["import { useState } from \"react\";\nimport {\n  GameState,\n  Player,\n  Piece,\n  PlayerColor,\n  PlayerType,\n  PieceType,\n} from \"../types\";\nimport { createPlayer, defaultBoard, setupPieces } from \"../utils\";\n\nexport const useChessGame = () => {\n  const [gameState, setGameState] = useState<GameState>({\n    board: defaultBoard(),\n    players: [\n      createPlayer(PlayerColor.WHITE, PlayerType.HUMAN),\n      createPlayer(PlayerColor.BLACK, PlayerType.HUMAN),\n    ],\n    piecesByPlayer: new Map<Player, Piece[]>(),\n    currentPlayerMoves: [],\n    capturedPieces: [],\n    isKingInCheck: false,\n    kingSquare: undefined,\n    currentPlayerIndex: 0,\n    moveHistory: [],\n    undoneMoves: [],\n    halfMoveClock: 0,\n    fullMoveNumber: 1,\n  });\n\n  const player1 = gameState.players[0];\n  const player2 = gameState.players[1];\n\n  const initializeBoard = () => {\n    const setup = setupPieces;\n    const newBoard = gameState.board;\n    let newPiecesByPlayer = new Map();\n\n    [PlayerColor.WHITE, PlayerColor.BLACK].forEach((color) => {\n      const rowOffset = color === PlayerColor.WHITE ? 7 : 0;\n      const pawnRow = color === PlayerColor.WHITE ? 6 : 1;\n\n      setup.forEach(({ type, positions, movementStrategy }) => {\n        positions.forEach(({ row, col }) => {\n          const player = color === PlayerColor.WHITE ? player1 : player2;\n          const pieceRow =\n            row + (type === PieceType.PAWN ? pawnRow - 1 : rowOffset);\n          const square = gameState.board[pieceRow][col];\n          const hasMoved =\n            type === PieceType.ROOK || type === PieceType.KING\n              ? false\n              : undefined;\n\n          const piece = createPiece(\n            player,\n            type,\n            color,\n            square,\n            movementStrategy,\n            true,\n            hasMoved\n          );\n\n          newBoard[pieceRow][col].piece = piece;\n          const playerPieces = newPiecesByPlayer.get(player) || [];\n          newPiecesByPlayer.set(player, [...playerPieces, piece]);\n        });\n      });\n    });\n\n    setGameState((prevState) => ({\n      ...prevState,\n      board: newBoard,\n      piecesByPlayer: newPiecesByPlayer,\n    }));\n  };\n\n  return {\n    ...gameState,\n  };\n};\n"],"names":[],"mappings":";;;AAAA;AACA;AAQA;AAAA;AAAA;;;;AAEO,MAAM,eAAe;IAC1B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAa;QACpD,OAAO,CAAA,GAAA,iJAAA,CAAA,eAAY,AAAD;QAClB,SAAS;YACP,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EAAE,iJAAA,CAAA,cAAW,CAAC,KAAK,EAAE,iJAAA,CAAA,aAAU,CAAC,KAAK;YAChD,CAAA,GAAA,kJAAA,CAAA,eAAY,AAAD,EAAE,iJAAA,CAAA,cAAW,CAAC,KAAK,EAAE,iJAAA,CAAA,aAAU,CAAC,KAAK;SACjD;QACD,gBAAgB,IAAI;QACpB,oBAAoB,EAAE;QACtB,gBAAgB,EAAE;QAClB,eAAe;QACf,YAAY;QACZ,oBAAoB;QACpB,aAAa,EAAE;QACf,aAAa,EAAE;QACf,eAAe;QACf,gBAAgB;IAClB;IAEA,MAAM,UAAU,UAAU,OAAO,CAAC,EAAE;IACpC,MAAM,UAAU,UAAU,OAAO,CAAC,EAAE;IAEpC,MAAM,kBAAkB;QACtB,MAAM,QAAQ,iJAAA,CAAA,cAAW;QACzB,MAAM,WAAW,UAAU,KAAK;QAChC,IAAI,oBAAoB,IAAI;QAE5B;YAAC,iJAAA,CAAA,cAAW,CAAC,KAAK;YAAE,iJAAA,CAAA,cAAW,CAAC,KAAK;SAAC,CAAC,OAAO,CAAC,CAAC;YAC9C,MAAM,YAAY,UAAU,iJAAA,CAAA,cAAW,CAAC,KAAK,GAAG,IAAI;YACpD,MAAM,UAAU,UAAU,iJAAA,CAAA,cAAW,CAAC,KAAK,GAAG,IAAI;YAElD,MAAM,OAAO,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,gBAAgB,EAAE;gBAClD,UAAU,OAAO,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE;oBAC7B,MAAM,SAAS,UAAU,iJAAA,CAAA,cAAW,CAAC,KAAK,GAAG,UAAU;oBACvD,MAAM,WACJ,MAAM,CAAC,SAAS,iJAAA,CAAA,YAAS,CAAC,IAAI,GAAG,UAAU,IAAI,SAAS;oBAC1D,MAAM,SAAS,UAAU,KAAK,CAAC,SAAS,CAAC,IAAI;oBAC7C,MAAM,WACJ,SAAS,iJAAA,CAAA,YAAS,CAAC,IAAI,IAAI,SAAS,iJAAA,CAAA,YAAS,CAAC,IAAI,GAC9C,QACA;oBAEN,MAAM,QAAQ,YACZ,QACA,MACA,OACA,QACA,kBACA,MACA;oBAGF,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,GAAG;oBAChC,MAAM,eAAe,kBAAkB,GAAG,CAAC,WAAW,EAAE;oBACxD,kBAAkB,GAAG,CAAC,QAAQ;2BAAI;wBAAc;qBAAM;gBACxD;YACF;QACF;QAEA,aAAa,CAAC,YAAc,CAAC;gBAC3B,GAAG,SAAS;gBACZ,OAAO;gBACP,gBAAgB;YAClB,CAAC;IACH;IAEA,OAAO;QACL,GAAG,SAAS;IACd;AACF"}},
    {"offset": {"line": 825, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 831, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/src/app/projects/chess/components/board/ChessPiece.tsx"],"sourcesContent":["import { Piece, PieceType, PlayerColor } from \"../../types\";\n\ntype ChessPieceProps = {\n  piece: Piece;\n  type: PieceType;\n  color: PlayerColor;\n  square: number[];\n  isBoardFlipped: boolean;\n};\n\nexport const ChessPiece = ({\n  piece,\n  type,\n  color,\n  square,\n  isBoardFlipped,\n}: ChessPieceProps) => {\n  const pieceColor = isBoardFlipped\n    ? color === PlayerColor.WHITE\n      ? PlayerColor.BLACK\n      : PlayerColor.WHITE\n    : color;\n  return (\n    <img\n      className=\"h-3/4 z-10\"\n      src={`/assets/images/${color}-${type}.svg`}\n      alt={`${type}`}\n    />\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;;;AAUO,MAAM,aAAa,CAAC,EACzB,KAAK,EACL,IAAI,EACJ,KAAK,EACL,MAAM,EACN,cAAc,EACE;IAChB,MAAM,aAAa,iBACf,UAAU,iJAAA,CAAA,cAAW,CAAC,KAAK,GACzB,iJAAA,CAAA,cAAW,CAAC,KAAK,GACjB,iJAAA,CAAA,cAAW,CAAC,KAAK,GACnB;IACJ,qBACE,8OAAC;QACC,WAAU;QACV,KAAK,CAAC,eAAe,EAAE,MAAM,CAAC,EAAE,KAAK,IAAI,CAAC;QAC1C,KAAK,GAAG,MAAM;;;;;;AAGpB"}},
    {"offset": {"line": 850, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 856, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/src/app/projects/chess/components/board/ChessSquare.tsx"],"sourcesContent":["import React from \"react\";\n\ntype SquareProps = {\n  square: number[];\n  isBoardFlipped: boolean;\n  children: React.ReactNode;\n};\n\nexport const ChessSquare = ({\n  square,\n  isBoardFlipped,\n  children,\n}: SquareProps) => {\n  const isDark = (square[0] + square[1]) % 2 === 0;\n  const isLabeledColumn = square[1] === 7;\n  const isLabeledRow = square[0] === 7;\n  const columnLabel = isBoardFlipped ? 1 + square[0] : 8 - square[0];\n  const rowLabel = isBoardFlipped\n    ? String.fromCharCode(104 - square[1])\n    : String.fromCharCode(97 + square[1]);\n\n  const getColor = (isDark: boolean) => {\n    return isDark ? \"bg-orange-200\" : \"bg-yellow-900\";\n  };\n\n  return (\n    <div\n      className={`relative flex justify-center items-center w-full h-full aspect-square ${getColor(\n        isDark\n      )}`}\n    >\n      {children}\n      {isLabeledColumn && (\n        <div\n          className={`absolute top-0 right-0 pt-1 pr-1 text-xs lg:text-sm ${\n            isDark ? \"text-yellow-900\" : \"text-orange-200\"\n          } select-none`}\n        >\n          {columnLabel}\n        </div>\n      )}\n      {isLabeledRow && (\n        <div\n          className={`absolute bottom-0 left-0 pl-1 text-xs lg:text-sm ${\n            isDark ? \"text-yellow-900\" : \"text-orange-200\"\n          } select-none`}\n        >\n          {rowLabel}\n        </div>\n      )}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;AAQO,MAAM,cAAc,CAAC,EAC1B,MAAM,EACN,cAAc,EACd,QAAQ,EACI;IACZ,MAAM,SAAS,CAAC,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,IAAI,MAAM;IAC/C,MAAM,kBAAkB,MAAM,CAAC,EAAE,KAAK;IACtC,MAAM,eAAe,MAAM,CAAC,EAAE,KAAK;IACnC,MAAM,cAAc,iBAAiB,IAAI,MAAM,CAAC,EAAE,GAAG,IAAI,MAAM,CAAC,EAAE;IAClE,MAAM,WAAW,iBACb,OAAO,YAAY,CAAC,MAAM,MAAM,CAAC,EAAE,IACnC,OAAO,YAAY,CAAC,KAAK,MAAM,CAAC,EAAE;IAEtC,MAAM,WAAW,CAAC;QAChB,OAAO,SAAS,kBAAkB;IACpC;IAEA,qBACE,8OAAC;QACC,WAAW,CAAC,sEAAsE,EAAE,SAClF,SACC;;YAEF;YACA,iCACC,8OAAC;gBACC,WAAW,CAAC,oDAAoD,EAC9D,SAAS,oBAAoB,kBAC9B,YAAY,CAAC;0BAEb;;;;;;YAGJ,8BACC,8OAAC;gBACC,WAAW,CAAC,iDAAiD,EAC3D,SAAS,oBAAoB,kBAC9B,YAAY,CAAC;0BAEb;;;;;;;;;;;;AAKX"}},
    {"offset": {"line": 897, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 903, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/src/app/projects/chess/components/board/Board.tsx"],"sourcesContent":["import { Square } from \"../../types\";\nimport { ChessPiece } from \"./ChessPiece\";\nimport { ChessSquare } from \"./ChessSquare\";\n\ntype BoardProps = {\n  board: Square[][];\n  isBoardFlipped: boolean;\n};\n\nexport const Board = ({ board, isBoardFlipped }: BoardProps) => {\n  return (\n    <div\n      id=\"chessboard\"\n      className=\"relative grid grid-cols-8 w-[90vmin] h-[90vmin] lg:w-[70vmin] lg:h-[70vmin]\"\n    >\n      {board.map((row, rowIndex) =>\n        row.map((square, colIndex) => (\n          <ChessSquare\n            key={`${rowIndex}-${colIndex}`}\n            square={[rowIndex, colIndex]}\n            isBoardFlipped={isBoardFlipped}\n          >\n            {square.piece && square.piece.isAlive && (\n              <ChessPiece\n                type={square.piece.type}\n                color={square.piece.color}\n                piece={square.piece}\n                square={[rowIndex, colIndex]}\n                isBoardFlipped={isBoardFlipped}\n              />\n            )}\n          </ChessSquare>\n        ))\n      )}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAOO,MAAM,QAAQ,CAAC,EAAE,KAAK,EAAE,cAAc,EAAc;IACzD,qBACE,8OAAC;QACC,IAAG;QACH,WAAU;kBAET,MAAM,GAAG,CAAC,CAAC,KAAK,WACf,IAAI,GAAG,CAAC,CAAC,QAAQ,yBACf,8OAAC,sKAAA,CAAA,cAAW;oBAEV,QAAQ;wBAAC;wBAAU;qBAAS;oBAC5B,gBAAgB;8BAEf,OAAO,KAAK,IAAI,OAAO,KAAK,CAAC,OAAO,kBACnC,8OAAC,qKAAA,CAAA,aAAU;wBACT,MAAM,OAAO,KAAK,CAAC,IAAI;wBACvB,OAAO,OAAO,KAAK,CAAC,KAAK;wBACzB,OAAO,OAAO,KAAK;wBACnB,QAAQ;4BAAC;4BAAU;yBAAS;wBAC5B,gBAAgB;;;;;;mBAVf,GAAG,SAAS,CAAC,EAAE,UAAU;;;;;;;;;;AAkB1C"}},
    {"offset": {"line": 947, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 953, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/src/app/projects/chess/components/ui/ChessGameContainer.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useChessGame } from \"../../hooks/useChessGame\";\nimport { Board } from \"../board/Board\";\n\nexport const ChessGameContainer = () => {\n  const gameManager = useChessGame();\n\n  const [isBoardFlipped, setisBoardFlipped] = useState(false);\n\n  return (\n    <div className=\"flex flex-col justify-center lg:flex-row\">\n      <div className=\"flex justify-center items-center\">\n        <Board board={gameManager.board} isBoardFlipped={isBoardFlipped} />\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMO,MAAM,qBAAqB;IAChC,MAAM,cAAc,CAAA,GAAA,wJAAA,CAAA,eAAY,AAAD;IAE/B,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAErD,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC,gKAAA,CAAA,QAAK;gBAAC,OAAO,YAAY,KAAK;gBAAE,gBAAgB;;;;;;;;;;;;;;;;AAIzD"}},
    {"offset": {"line": 991, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1001, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0]}},
    {"offset": {"line": 1015, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1020, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0]}},
    {"offset": {"line": 1022, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1027, "column": 0}, "map": {"version":3,"sources":["file:///Users/michaelohare/workspace/react-chess-rewrite/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,0HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0]}},
    {"offset": {"line": 1029, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}